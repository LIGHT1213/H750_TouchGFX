/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    container1.setPosition(0, 0, 480, 272);

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    container1.add(box1);

    TemNum.setXY(67, 84);
    TemNum.setProgressIndicatorPosition(0, 0, 104, 104);
    TemNum.setRange(0, 100);
    TemNum.setCenter(52, 52);
    TemNum.setRadius(42);
    TemNum.setLineWidth(16);
    TemNum.setStartEndAngle(0, 360);
    TemNum.setCapPrecision(180);
    TemNum.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
    TemNumPainter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_LINE_FULL_ID));
    TemNum.setPainter(TemNumPainter);
    TemNum.setValue(60);
    container1.add(TemNum);

    HeartRateNum.setXY(303, 84);
    HeartRateNum.setProgressIndicatorPosition(0, 0, 104, 104);
    HeartRateNum.setRange(0, 100);
    HeartRateNum.setCenter(52, 52);
    HeartRateNum.setRadius(42);
    HeartRateNum.setLineWidth(16);
    HeartRateNum.setStartEndAngle(0, 360);
    HeartRateNum.setCapPrecision(180);
    HeartRateNum.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
    HeartRateNumPainter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_LINE_FULL_ID));
    HeartRateNum.setPainter(HeartRateNumPainter);
    HeartRateNum.setValue(60);
    container1.add(HeartRateNum);

    textArea1.setXY(99, 34);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));

    textArea2.setXY(335, 34);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    button1.setXY(155, 18);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    button1.setAction(buttonCallback);

    textArea3.setXY(197, 34);
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));

    TemNumText.setXY(100, 208);
    TemNumText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    TemNumText.setLinespacing(0);
    Unicode::snprintf(TemNumTextBuffer, TEMNUMTEXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID11).getText());
    TemNumText.setWildcard(TemNumTextBuffer);
    TemNumText.resizeToCurrentText();
    TemNumText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));

    HeartRateText.setXY(335, 208);
    HeartRateText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    HeartRateText.setLinespacing(0);
    Unicode::snprintf(HeartRateTextBuffer, HEARTRATETEXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID13).getText());
    HeartRateText.setWildcard(HeartRateTextBuffer);
    HeartRateText.resizeToCurrentText();
    HeartRateText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));

    add(__background);
    add(container1);
    add(textArea1);
    add(textArea2);
    add(button1);
    add(textArea3);
    add(TemNumText);
    add(HeartRateText);
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction1
        //When button1 clicked change screen to HeartLine
        //Go to HeartLine with screen transition towards East
        application().gotoHeartLineScreenSlideTransitionEast();
    }
}
